//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace APP_MVC_GStore.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GameStoreEntities : DbContext
    {
        public GameStoreEntities()
            : base("name=GameStoreEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TB_Carrito> TB_Carrito { get; set; }
        public virtual DbSet<TB_Categoria> TB_Categoria { get; set; }
        public virtual DbSet<TB_ComprobantePago> TB_ComprobantePago { get; set; }
        public virtual DbSet<TB_DetalleComprobante> TB_DetalleComprobante { get; set; }
        public virtual DbSet<TB_Direcciones> TB_Direcciones { get; set; }
        public virtual DbSet<TB_Producto> TB_Producto { get; set; }
        public virtual DbSet<TB_Usuario> TB_Usuario { get; set; }
    
        public virtual int usp_CrearUsuario(string nombre, string apellido, string email, Nullable<System.Guid> emailverif, string contra)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var emailverifParameter = emailverif.HasValue ?
                new ObjectParameter("emailverif", emailverif) :
                new ObjectParameter("emailverif", typeof(System.Guid));
    
            var contraParameter = contra != null ?
                new ObjectParameter("contra", contra) :
                new ObjectParameter("contra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CrearUsuario", nombreParameter, apellidoParameter, emailParameter, emailverifParameter, contraParameter);
        }
    
        public virtual int usp_InsertaProducto(string nomProd, Nullable<decimal> precio, Nullable<int> idCategoria, Nullable<int> stock)
        {
            var nomProdParameter = nomProd != null ?
                new ObjectParameter("nomProd", nomProd) :
                new ObjectParameter("nomProd", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(int));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertaProducto", nomProdParameter, precioParameter, idCategoriaParameter, stockParameter);
        }
    
        public virtual int usp_InsertarCategoria(string nomCategoria)
        {
            var nomCategoriaParameter = nomCategoria != null ?
                new ObjectParameter("nomCategoria", nomCategoria) :
                new ObjectParameter("nomCategoria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertarCategoria", nomCategoriaParameter);
        }
    
        public virtual ObjectResult<usp_ListarProducto_Result> usp_ListarProducto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarProducto_Result>("usp_ListarProducto");
        }
    
        public virtual ObjectResult<usp_Logueo_Result> usp_Logueo(string email, string contra)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var contraParameter = contra != null ?
                new ObjectParameter("contra", contra) :
                new ObjectParameter("contra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Logueo_Result>("usp_Logueo", emailParameter, contraParameter);
        }
    }
}
